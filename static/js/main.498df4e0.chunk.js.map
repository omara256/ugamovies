{"version":3,"sources":["axios.js","Row.js","requests.js","Banner.js","logo.svg","Nav.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","request","data","results","fetchData","className","map","movie","onClick","movieTrailer","name","then","url","urlParams","URLSearchParams","URL","search","catch","error","console","log","handleClick","src","poster_path","backdrop_path","alt","id","videoId","opts","height","width","playerVars","autoplay","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovie","Banner","str","n","setMovie","Math","floor","random","length","style","backgroundSize","backgroundImage","backgroundPosition","original_name","overview","substr","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","logo","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.498df4e0.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://api.themoviedb.org/3\"\r\n});\r\n\r\n\r\nexport default instance;","import React, { useState, useEffect } from 'react';\r\nimport YouTube from 'react-youtube';\r\nimport axios from './axios';\r\nimport \"./Row.css\";\r\nimport movieTrailer from 'movie-trailer';\r\n\r\n\r\nconst base_url = \"https://image.tmdb.org/t/p/original\";\r\n\r\nfunction Row({ title, fetchUrl, isLargeRow }) {\r\n    const [movies, setMovies] = useState([]);\r\n    const [trailerUrl, setTrailerUrl] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n            async function fetchData(){\r\n                const request = await axios.get(fetchUrl);\r\n                setMovies(request.data.results);\r\n                return request;\r\n            }\r\n            fetchData();\r\n\r\n    }, [fetchUrl]);\r\n\r\n    const opts = {\r\n         height: \"390\",\r\n         width: \"100%\",\r\n         playerVars: {\r\n             \r\n            autoplay: 1,\r\n         },\r\n    };\r\n\r\n    const handleClick = (movie) => {\r\n        if (trailerUrl) {\r\n            setTrailerUrl('');\r\n        }else {\r\n            movieTrailer(movie?.name || \"\")\r\n             .then((url) => {\r\n                   const urlParams = new URLSearchParams(new URL(url).search);\r\n                   setTrailerUrl(urlParams.get('v'));\r\n             }).catch((error) => console.log(error));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            {/* title */}\r\n            <h2>{title}</h2>\r\n\r\n\r\n          <div className=\"row__posters\">\r\n\r\n                {movies.map(movie => (\r\n                     <img \r\n                     key={movie.id}\r\n                     onClick={() => handleClick(movie)}\r\n                     className={`row__poster ${isLargeRow && \"row__posterLarge\"}`}\r\n                     src={`${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`} alt={movie.name} />\r\n                ))}\r\n          </div>\r\n\r\n          {trailerUrl &&<YouTube videoId={trailerUrl} opts={opts} />}\r\n  \r\n\r\n         \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Row\r\n","const API_KEY = \"f39aa35c35d93ea8979df98ccff9657d\";\r\n\r\nconst requests = {\r\n     fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n     fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n     fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n     fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n     fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n     fetchHorrorMovie: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n}\r\n\r\nexport default requests;","import React, { useState, useEffect } from 'react'\r\nimport axios from './axios';\r\nimport requests from './requests';\r\nimport './Banner.css'\r\n\r\nfunction Banner() {\r\n  \r\n     const [movie, setMovie] = useState([]);\r\n     \r\n     useEffect(() => {\r\n       async function fetchData() {\r\n        const request = await axios.get(requests.fetchNetflixOriginals);\r\n        setMovie(\r\n        request.data.results[\r\n            Math.floor(Math.random() * request.data.results.length - 1)\r\n        ]\r\n    );\r\n        return request;\r\n       }\r\n       fetchData();\r\n     }, []);\r\n\r\n     console.log(movie);\r\n\r\n     function truncate(str, n) {\r\n         return str?.length > n ? str.substr(0, n - 1) + \"...\" : str;\r\n     }\r\n\r\n    return (\r\n        // header with a background image\r\n        <header className=\"banner\"\r\n              style={{\r\n                  backgroundSize: \"cover\",\r\n                  backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`,\r\n                  backgroundPosition: \"center center\",\r\n              }}\r\n        >\r\n            <div className=\"banner__contents\">\r\n\r\n            {/* title */}\r\n            <h1 className=\"banner__title\">{\r\n                   movie?.title || movie?.name || movie?.original_name\r\n                }</h1>\r\n                <div className=\"banner__buttons\">\r\n                    <button className=\"banner__button\">Play</button>\r\n                    <button className=\"banner__button\">My List</button>\r\n                </div>\r\n\r\n            <h1 className=\"banner__description\">{truncate(movie?.overview, 150)}</h1>\r\n            {/* div > 2 buttons */}\r\n            {/* description */}\r\n            </div>\r\n                \r\n                <div className=\"banner__fadeButtom\" />\r\n\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Banner\r\n","export default __webpack_public_path__ + \"static/media/logo.625e35f6.svg\";","import React, { useEffect, useState } from 'react'\r\nimport logo from './logo.svg';\r\nimport \"./Nav.css\";\r\n\r\nfunction Nav() {\r\n\r\n    const [show, handleShow] = useState(false);\r\n \r\n      useEffect(() => {\r\n             window.addEventListener(\"scroll\", () => {\r\n                 if (window.scrollY > 100) {\r\n                     handleShow(true);\r\n                 }else handleShow(false);\r\n             });\r\n             return () => {\r\n                 window.removeEventListener(\"scroll\");\r\n             };\r\n      }, []);\r\n\r\n\r\n    return (\r\n        <div className={`nav ${show && \"nav__black\"}`}>\r\n             <img\r\n                 className=\"nav__logo\"\r\n                 src={logo}\r\n                 alt=\"Logo\"\r\n                 />\r\n\r\n                 {/* <img \r\n                    className=\"nav_avatar\"\r\n                    src=\"https://pbs.twimg.com/profile_image/124011999041155\"\r\n                    alt=\"avatar\"\r\n                    /> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nav\r\n","\nimport './App.css';\nimport Row from './Row';\nimport requests from './requests';\nimport Banner from './Banner';\nimport Nav from './Nav';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* Nav */}\n\n      <Nav />\n\n      {/* Banner */}\n       <Banner />\n        <Row  \n        title=\"UGAFLIX ORIGINALS\" \n        fetchUrl={requests.fetchNetflixOriginals} \n        isLargeRow\n        />\n        <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending} />\n        <Row  title=\"Top Rated\" fetchUrl={requests.fetchTopRated} />\n        <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies} />\n        <Row  title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies} />\n        <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovie} />\n        \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}